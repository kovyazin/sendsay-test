{"version":3,"sources":["components/Logo/logo.svg","components/SentMessages/TableSentMessages/SentMessagesItem/SentMessagesItem.module.css","reducers/formReducer.js","constants/form.js","reducers/thanksgivingMessageReducer.js","constants/thanksgivingMessage.js","reducers/rootReducer.js","store/store.js","components/Logo/Logo.jsx","services/api.js","components/MessageForm/TextArea/TextArea.jsx","components/MessageForm/TextInput/TextInput.jsx","components/MessageForm/ButtonUploadFile/ButtonUploadFile.jsx","components/MessageForm/AttachedFiles/AttachedFiles.jsx","components/MessageForm/DragndropZone/DragndropZone.jsx","components/MessageForm/MessageFormView.jsx","components/MessageForm/MessageForm.jsx","actionCreators/form.js","actionCreators/thanksgivingMessage.js","components/SentMessages/TableSentMessages/SentMessagesItem/SentMessagesItemView.jsx","components/SentMessages/TableSentMessages/SentMessagesItem/SentMessagesItem.jsx","components/SentMessages/TableSentMessages/TableSentMessages.jsx","components/SentMessages/SentMessages.jsx","components/ThanksgivingMessage/ThanksgivingMessage.jsx","components/App/App.jsx","index.js","components/SentMessages/TableSentMessages/TableSentMessages.module.css","components/MessageForm/TextInput/TextInput.module.css","components/MessageForm/AttachedFiles/AttachedFiles.module.css","components/MessageForm/MessageForm.module.css","components/MessageForm/DragndropZone/DragndropZone.module.css","components/MessageForm/TextArea/TextArea.module.css","components/ThanksgivingMessage/ThanksgivingMessage.module.css","components/App/App.module.css","components/MessageForm/ButtonUploadFile/ButtonUploadFile.module.css","components/SentMessages/SentMessages.module.css"],"names":["module","exports","initialState","sentMessages","attachedFiles","filesError","formReducer","state","action","type","values","data","id","res","map","msg","result","date","status","parseFloat","name","payload","base64","size","encoding","filter","isShow","email","thanksgivingMessageReducer","rootReducer","combineReducers","form","thanksgivingMessage","store","createStore","applyMiddleware","thunk","window","Logo","props","src","logo","alt","sendsay","Sendsay","apiKey","TextArea","label","isSubmitting","component","useField","field","meta","htmlFor","className","styles","disabled","touched","error","warning","TextInput","position","ButtonUploadFile","getInputProps","btnLabel","btnFile","AttachedFiles","removeAttachedFile","file","key","fileName","btnDelete","onClick","DragndropZone","isDragActive","dragndropZone","active","title","text","MessageFormView","handleSubmit","getRootProps","onSubmit","row","group","placeholder","length","btnSend","validationSchema","Yup","fromName","required","fromEmail","toName","toEmail","subject","max","min","message","initialValues","connect","sendMessage","dispatch","request","letter","attaches","sendwhen","mca","transformData","then","catch","err","sendFormData","sendMessageAC","showThanksgivingMessage","addAttachedFile","cleanAttachedFiles","setFilesError","onDrop","useCallback","acceptedFiles","reduce","sum","_maxTotalSize","forEach","reader","FileReader","onabort","console","log","onerror","onload","currentName","currentSize","totalSize","some","readAsDataURL","onDropRejected","rejectedFiles","_maxSize","useDropzone","noClick","maxSize","setSubmitting","resetForm","SentMessagesItemView","moment","locale","format","success","waiting","SentMessagesItem","this","updateMessageStatus","timer","setInterval","prevProps","clearInterval","Component","getMessageInfo","obj","dt","updateMessageStatusAC","TableSentMessages","table","header","heading","hideThanksgivingMessage","useEffect","setTimeout","clearTimeout","isShowThanksgivingMessage","app","TransitionGroup","CSSTransition","classNames","timeout","messages","ReactDOM","render","document","getElementById"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,kC,+ECC3CD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,QAAU,kCAAkC,QAAU,kCAAkC,QAAU,oC,oHCQpJC,EAAe,CACnBC,aAAc,GACdC,cAAe,GACfC,WAAY,MAyECC,EAtEK,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAOC,MACb,ICjBwB,eDkBtB,OAAO,eACFF,EADL,CAEEJ,aAAa,GAAD,mBACPI,EAAMJ,cADC,CAEV,CACEO,OAAO,eACFF,EAAOG,MAEZC,GAAIJ,EAAOK,IAAI,iBAIvB,IC7BiC,wBD8B/B,OAAO,eACFN,EADL,CAEEJ,aAAcI,EAAMJ,aAAaW,KAAI,SAAAC,GACnC,OAAIA,EAAIH,KAAOJ,EAAOI,GACb,eACFG,EADL,CAEEC,OAAQ,CACNC,KAAMT,EAAOS,KACbC,OAAQC,WAAWX,EAAOU,WAIzBH,OAGb,IC5C6B,oBD6C3B,OAAO,eACFR,EADL,CAEEF,WAAY,KACZD,cAAc,GAAD,mBACRG,EAAMH,eADE,CAEX,CACEgB,KAAMZ,EAAOa,QAAQD,KACrBE,OAAQd,EAAOa,QAAQC,OACvBC,KAAMf,EAAOa,QAAQE,KACrBC,SAAU,cAIlB,ICzDgC,uBD0D9B,OAAO,eACFjB,EADL,CAEEF,WAAY,KACZD,cAAeG,EAAMH,cAAcqB,QACjC,qBAAGL,OAAoBZ,EAAOa,QAAQD,UAI5C,ICjEgC,uBDkE9B,OAAO,eACFb,EADL,CAEEH,cAAe,KAGnB,ICtE2B,kBDuEzB,OAAO,eACFG,EADL,CAEEF,WAAYG,EAAOa,QAAQN,MAE/B,QACE,OAAOR,IE5EPL,EAAe,CACnBwB,QAAQ,EACRC,MAAO,MAsBMC,EAnBoB,WAAmC,IAAlCrB,EAAiC,uDAAzBL,EAAcM,EAAW,uCACnE,OAAQA,EAAOC,MACb,ICZqC,4BDanC,OAAO,eACFF,EADL,CAEEmB,QAAQ,EACRC,MAAOnB,EAAOmB,QAElB,ICjBqC,4BDkBnC,OAAO,eACFpB,EADL,CAEEmB,QAAQ,EACRC,MAAO,OAEX,QACE,OAAOpB,IEhBEsB,EALKC,YAAgB,CAClCC,KAAMzB,EACN0B,oBAAqBJ,ICFjBK,EAAQC,YAAYL,EAAaM,YAAgBC,MAEvDC,OAAOJ,MAAQA,EAEAA,Q,6CCMAK,EARF,SAAAC,GACX,OACE,6BACE,yBAAKC,IAAKC,IAAMC,IAAI,W,0BCLpBC,EAAU,I,OAAIC,GAAQ,CAAEC,OAD5B,gF,yCC0BaC,EAtBE,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAkBC,GAA6B,EAAxCC,UAAwC,EAA7BD,cAAiBT,EAAY,oDACzD3B,EAAa2B,EAAb3B,GAAIQ,EAASmB,EAATnB,KADqD,EAE3C8B,YAASX,GAFkC,mBAE1DY,EAF0D,KAEnDC,EAFmD,KAIjE,OACE,oCACE,2BAAOC,QAASzC,GAAMQ,EAAMkC,UAAWC,IAAOR,OAC3CA,GAEH,4CACEO,UAAWC,IAAOJ,MAClBK,SAAUR,GACNG,EACAZ,IAELa,EAAKK,SAAWL,EAAKM,MACpB,yBAAKJ,UAAWC,IAAOI,SAAUP,EAAKM,OACpC,O,iBCKKE,EAtBG,SAAC,GAAiD,IAA/Cb,EAA8C,EAA9CA,MAAOc,EAAuC,EAAvCA,SAAUb,EAA6B,EAA7BA,aAAiBT,EAAY,mDACzD3B,EAAa2B,EAAb3B,GAAIQ,EAASmB,EAATnB,KADqD,EAE3C8B,YAASX,GAFkC,mBAE1DY,EAF0D,KAEnDC,EAFmD,KAIjE,OACE,oCACE,2BAAOC,QAASzC,GAAMQ,EAAMkC,UAAWC,IAAOR,OAC3CA,GAEH,yCACEO,UAAS,UAAKC,IAAOJ,MAAZ,YAAqBU,EAAWN,IAAOM,GAAY,IAC5DL,SAAUR,GACNG,EACAZ,IAELa,EAAKK,SAAWL,EAAKM,MACpB,yBAAKJ,UAAWC,IAAOI,SAAUP,EAAKM,OACpC,O,iBCFKI,EAhBiB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,cAAef,EAAmB,EAAnBA,aAChD,OACE,2BAAOK,QAAQ,WAAWC,UAAWC,IAAOS,UAA5C,wFAEE,yCACEvD,KAAK,OACLW,KAAK,WACLR,GAAG,WACH0C,UAAWC,IAAOU,QAClBT,SAAUR,GACNe,Q,iBCYGG,EAtBO,SAAC,GAAyD,IAAvD9D,EAAsD,EAAtDA,cAAe+D,EAAuC,EAAvCA,mBAAoBnB,EAAmB,EAAnBA,aAC1D,OACE,yBAAKM,UAAWC,IAAOnD,eACpBA,EAAcU,KAAI,YAAe,IAAZM,EAAW,EAAXA,KACpB,OACE,yBAAKkC,UAAWC,IAAOa,KAAMC,IAAKjD,GAChC,yBAAKkC,UAAWC,IAAOe,UAAWlD,GAClC,4BACEX,KAAK,SACL6C,UAAWC,IAAOgB,UAClBf,SAAUR,EACVwB,QAAS,kBAAML,EAAmB/C,KAJpC,oD,iBCOGqD,EAdO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,OACE,yBACEpB,UAAS,UAAKC,IAAOoB,cAAZ,YAA6BD,EAAenB,IAAOqB,OAAS,KAErE,yBAAKtB,UAAWC,IAAOsB,OAAvB,mJACA,yBAAKvB,UAAWC,IAAOuB,MAAvB,4X,gBCkGSC,EAjGS,SAAC,GASlB,IARL/B,EAQI,EARJA,aACAgC,EAOI,EAPJA,aACA5E,EAMI,EANJA,cACA6E,EAKI,EALJA,aACAlB,EAII,EAJJA,cACAW,EAGI,EAHJA,aACAP,EAEI,EAFJA,mBACA9D,EACI,EADJA,WAEA,OACE,wCAAMiD,UAAWC,IAAOxB,KAAMmD,SAAUF,GAAkBC,KACxD,yBAAK3B,UAAWC,IAAOsB,OAAvB,6HACA,yBAAKvB,UAAWC,IAAO4B,KACrB,yBAAK7B,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACErC,MAAM,wCACN3B,KAAK,WACLX,KAAK,OACL4E,YAAY,qBACZxB,SAAS,OACTb,aAAcA,KAGlB,yBAAKM,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACEhE,KAAK,YACLX,KAAK,OACL4E,YAAY,QACZxB,SAAS,QACTb,aAAcA,MAIpB,yBAAKM,UAAWC,IAAO4B,KACrB,yBAAK7B,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACErC,MAAM,2BACN3B,KAAK,SACLX,KAAK,OACL4E,YAAY,qBACZxB,SAAS,OACTb,aAAcA,KAGlB,yBAAKM,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACEhE,KAAK,UACLX,KAAK,OACL4E,YAAY,QACZxB,SAAS,QACTb,aAAcA,MAIpB,yBAAKM,UAAWC,IAAO4B,KACrB,yBAAK7B,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACErC,MAAM,gEACN3B,KAAK,UACLX,KAAK,OACLuC,aAAcA,MAIpB,yBAAKM,UAAWC,IAAO4B,KACrB,yBAAK7B,UAAWC,IAAO6B,OACrB,kBAAC,EAAD,CACErC,MAAM,yDACN3B,KAAK,UACLX,KAAK,OACLuC,aAAcA,MAEb5C,EAAckF,QACf,kBAAC,EAAD,CACElF,cAAeA,EACf+D,mBAAoBA,EACpBnB,aAAcA,IAGlB,kBAAC,EAAD,CACEe,cAAeA,EACff,aAAcA,IAEf3C,GAAc,0BAAMiD,UAAWC,IAAOI,SAAUtD,KAIrD,4BAAQI,KAAK,SAAS6C,UAAWC,IAAOgC,QAAS/B,SAAUR,GAA3D,0DAIA,kBAAC,EAAD,CAAe0B,aAAcA,MCrF7Bc,EAAmBC,SAAW,CAClCC,SAAUD,WAAaE,SAAS,gIAChCC,UAAWH,WACR9D,MAAM,iHACNgE,SAAS,mHACZE,OAAQJ,WAAaE,SAAS,gIAC9BG,QAASL,WACN9D,MAAM,iHACNgE,SAAS,mHACZI,QAASN,WACNO,IAAI,GAAI,wQACRC,IAAI,GAAI,sRACRN,SAAS,uLACZO,QAAST,WACNO,IAAI,IAAK,gUACTC,IAAI,GAAI,oTACRN,SAAS,sKAGRQ,EAAgB,CACpBT,SAAU,GACVE,UAAW,GACXC,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTG,QAAS,IAuHIE,eALS,SAAC,GAAD,QAAGrE,KAAH,MAA8C,CACpE3B,cADsB,EAAWA,cAEjCC,WAFsB,EAA0BA,cAKV,CACtCgG,YCzJyB,SAAA1F,GAAI,OAAI,SAAA2F,GACjC,ORqB0B,SAAA3F,GAC1B,OAAOgC,EACJ4D,QA9BiB,SAAC,GAQhB,IAPLR,EAOI,EAPJA,QACAL,EAMI,EANJA,SACAE,EAKI,EALJA,UACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,QAIA,MAAO,CACLtF,OAAQ,kBACRgG,OAAQ,CACNT,UACA,YAAaL,EACb,aAAcE,EACd,UAAWC,EACXK,QAAS,CAAEpB,KARX,EAFJoB,SAWIO,SATA,EADJA,SAUuB3F,KAAI,kBAAiC,CACtDM,KADqB,EAAGA,KAExBE,OAFqB,EAASA,OAG9BE,SAHqB,EAAiBA,cAM1CkF,SAAU,OACVC,IAAK,CAACb,IAMGc,CAAcjG,IACtBkG,MAAK,SAAAhG,GAAG,OAAIA,KACZiG,OAAM,SAAAC,GAAG,OAAIA,KQzBTC,CAAarG,GAAMkG,MAAK,SAAAhG,GAC7ByF,EAJyB,SAACzF,EAAKF,GAAN,MAAgB,CAAEF,KdVnB,ecUuCI,MAAKF,QAI3DsG,CAAcpG,EAAKF,SDwJ9BuG,wBEjKqC,SAAAvF,GAAK,MAAK,CAC/ClB,KbNuC,4BaOvCkB,UFgKAwF,gBCxI6B,SAAC/F,EAAME,EAAQC,GAAf,MAAyB,CACtDd,Kd9B+B,oBc+B/BY,QAAS,CAAED,OAAME,SAAQC,UDuIzB4C,mBClIgC,SAAA/C,GAAI,MAAK,CACzCX,KdpCkC,uBcqClCY,QAAS,CAAED,UDiIXgG,mBCrIgC,iBAAO,CAAE3G,KdhCP,yBasKlC4G,cC/H2B,SAAAtG,GAAG,MAAK,CACnCN,KdvC6B,kBcwC7BY,QAAS,CAAEN,UDuHEqF,EApHK,SAAC,GASd,IARLC,EAQI,EARJA,YACAa,EAOI,EAPJA,wBACA9G,EAMI,EANJA,cACA+G,EAKI,EALJA,gBACAC,EAII,EAJJA,mBACAjD,EAGI,EAHJA,mBACAkD,EAEI,EAFJA,cACAhH,EACI,EADJA,WAKMiH,EAASC,uBACb,SAAAC,GAEIA,EAAcC,QAAO,SAACC,EAAD,YAAQnG,KAAkBmG,IAAK,GAClDtH,EAAcqH,QAAO,SAACC,EAAD,YAAQnG,KAAkBmG,IAAK,GANtC,IAShBL,EAAc,qNAAD,OACgCM,GADhC,kBAOfH,EAAcI,SAAQ,SAAAxD,GACpB,IAAMyD,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,QAAU,kBAAMb,EAAc,oKACrCQ,EAAOM,OAAS,WAAO,IACPC,EAAmChE,EAAzChD,KAAyBiH,EAAgBjE,EAAtB7C,KACrB+G,EAAYlI,EAAcqH,QAC9B,SAACC,EAAD,UAAmBA,EAAnB,EAAQnG,OACR8G,IAICjI,EAAcmI,MAAK,qBAAGnH,OAAoBgH,MAC3CE,EA9BY,KAgCZnB,EAAgBiB,EAAaP,EAAO7G,OAAQqH,GAE1CC,EAlCU,KAmCZjB,EAAc,qNAAD,OACgCM,GADhC,mBAMjBE,EAAOW,cAAcpE,QAGzB,CAAChE,EAAeiH,EAAeF,IAG3BsB,EAAiBlB,uBACrB,SAAAmB,GACEA,EAAcd,SAAQ,YAAe,IAAZrG,EAAW,EAAXA,KAErB8F,EADE9F,EAnDO,IAoDK,8RAAD,OAC6CoH,EAD7C,iBAKC,oLAIpB,CAACtB,IA9DC,EAiEkDuB,YAAY,CAChEtB,SACAmB,iBACAI,SAAS,EACTC,QApEe,MAgET7D,EAjEJ,EAiEIA,aAAclB,EAjElB,EAiEkBA,cAAeW,EAjEjC,EAiEiCA,aAOrC,OACE,kBAAC,IAAD,CACEyB,cAAeA,EACfX,iBAAkBA,EAClBN,SAAU,SAACxE,EAAD,GAA2C,IAAhCqI,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClC3C,EAAY,eAAK3F,EAAN,CAAc+F,SAAUrG,KAAiByG,MAAK,WACvDkC,GAAc,GACdC,IACA5B,IACAC,EAAc,MACdH,EAAwBxG,EAAOoF,eAIlC,gBAAG9C,EAAH,EAAGA,aAAcgC,EAAjB,EAAiBA,aAAjB,OACC,kBAAC,EAAD,CACEhC,aAAcA,EACdgC,aAAcA,EACd5E,cAAeA,EACf6E,aAAcA,EACdlB,cAAeA,EACfW,aAAcA,EACdP,mBAAoBA,EACpB9D,WAAYA,U,iGG3HP4I,GArBc,SAAC,GAA+B,IAA7B/C,EAA4B,EAA5BA,QAASjF,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC7C,OACE,4BACE,wBAAIoC,UAAWC,KAAO5C,MACnBM,GACCiI,KAAOjI,GACJkI,OAAO,MACPC,OAAO,YAEd,wBAAI9F,UAAWC,KAAO5C,KAAMkE,MAAOqB,GAChCA,GAEH,wBAAI5C,UAAWC,KAAO5C,OACP,IAAZO,GAAiB,0BAAMoC,UAAWC,KAAO8F,SAAxB,gEACjBnI,GAAU,GAAK,0BAAMoC,UAAWC,KAAOI,SAAxB,wCACfzC,GAAU,GAAK,0BAAMoC,UAAWC,KAAO+F,SAAxB,8DCblBC,G,+LACiB,IAAD,EACkBC,KAAKjH,MAAjCkH,EADU,EACVA,oBAAqB7I,EADX,EACWA,GAE7B6I,EAAoB7I,GAEpB4I,KAAKE,MAAQC,aAAY,WACvBF,EAAoB7I,KACnB,O,yCAGcgJ,GACbA,EAAU1I,SAAWsI,KAAKjH,MAAMrB,QAClC2I,cAAcL,KAAKE,S,6CAKrBG,cAAcL,KAAKE,S,+BAInB,OAAO,kBAAC,GAAyBF,KAAKjH,W,GAtBXuH,aA0BhB1D,gBAAQ,iBAAO,KAAK,CAAEqD,oBHXF,SAAA7I,GAAE,OAAI,SAAA0F,IRgBX,SAAA1F,GAC5B,OAAO+B,EACJ4D,QAAQ,CAAE/F,OAAQ,YAAaI,OAC/BiG,MAAK,SAAAhG,GAAG,OAAIA,KACZiG,OAAM,SAAAC,GAAG,OAAIA,MQnBhBgD,CAAenJ,GAAIiG,MAAK,YAA8B,IAAD,IAA1BmD,IAAOC,EAAmB,EAAnBA,GAAI/I,EAAe,EAAfA,OACpCoF,EATiC,SAAC1F,EAAIK,EAAMC,GAAX,MAAuB,CAC1DT,KdlBmC,wBcmBnCG,KACAM,SACAD,QAKWiJ,CAAsBtJ,EAAIqJ,EAAI/I,UGS5BkF,CAA6CmD,I,oBCM7CY,GAjCW,SAAC,GAAsB,IAApBhK,EAAmB,EAAnBA,aAC3B,OACE,2BAAOmD,UAAWC,KAAO6G,OACvB,+BACE,wBAAI9G,UAAWC,KAAO8G,QACpB,wBAAI/G,UAAWC,KAAO+G,SAAtB,4BACA,wBAAIhH,UAAWC,KAAO+G,SAAtB,4BACA,wBAAIhH,UAAWC,KAAO+G,SAAtB,0CAGJ,+BACGnK,EAAaW,KACZ,YAIO,IAHLF,EAGI,EAHJA,GACUsF,EAEN,EAFJxF,OAAUwF,QAEN,IADJlF,OACI,gBADkC,GAClC,GADME,cACN,MADe,EACf,MADkBD,YAClB,MADyB,KACzB,EACJ,OACE,kBAAC,GAAD,CACEoD,IAAKzD,EACLsF,QAASA,EACTtF,GAAIA,EACJM,OAAQA,EACRD,KAAMA,U,oBCNPmF,gBAJS,SAAC,GAAD,MAAiC,CACvDjG,aADsB,EAAG4B,KAAQ5B,gBAIpBiG,EAhBM,SAAC,GAAsB,IAApBjG,EAAmB,EAAnBA,aACtB,OACE,yBAAKmD,UAAWC,KAAOpD,cACrB,yBAAKmD,UAAWC,KAAOsB,OAAvB,qIACG1E,EAAamF,QACd,kBAAC,GAAD,CAAmBnF,aAAcA,KAEjCA,EAAamF,QAAU,oM,oBCgBhBc,gBAJS,SAAC,GAAD,MAAyC,CAC/DzE,MADsB,EAAGK,oBAAuBL,SAIV,CAAE4I,wBLvBH,iBAAO,CAC5C9J,KbVuC,+BkBgC1B2F,EAvBa,SAAC,GAAwC,IAAtCzE,EAAqC,EAArCA,MAAO4I,EAA8B,EAA9BA,wBAMpC,OALAC,qBAAU,WACR,IAAMd,EAAQe,WAAWF,EAAyB,KAClD,OAAO,kBAAMG,aAAahB,OAI1B,yBAAKpG,UAAWC,KAAOvB,qBACrB,yBAAKsB,UAAWC,KAAOsB,OAAvB,uOAGA,yBAAKvB,UAAWC,KAAOuB,MAAvB,idAEqBnD,EAFrB,8I,oBCwBSyE,gBANS,SAAC,GAAD,MAEjB,CACLuE,0BAHsB,EACtB3I,oBAAuBN,UAKV0E,EA/BH,SAAC,GAAmC,IAAjCuE,EAAgC,EAAhCA,0BACb,OACE,yBAAKrH,UAAWC,KAAOqH,KACrB,kBAAC,EAAD,MACA,yBAAKtH,UAAWC,KAAOxB,MACrB,kBAAC8I,EAAA,EAAD,MACIF,GACA,kBAACG,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,kBAAC,EAAD,OAGHL,GACC,kBAACG,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,kBAAC,GAAD,SAKR,yBAAK1H,UAAWC,KAAO0H,UACrB,kBAAC,GAAD,WCxBRC,IAASC,OACP,kBAAC,IAAD,CAAUlJ,MAAOA,GACf,kBAAC,GAAD,OAEFmJ,SAASC,eAAe,U,mBCZ1BrL,EAAOC,QAAU,CAAC,MAAQ,iCAAiC,OAAS,kCAAkC,QAAU,qC,mBCAhHD,EAAOC,QAAU,CAAC,MAAQ,kDAAkD,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,kDAAkD,QAAU,wD,mBCAhND,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,KAAO,4BAA4B,SAAW,gCAAgC,UAAY,mC,kBCAjKD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,IAAM,yBAAyB,MAAQ,2BAA2B,MAAQ,2BAA2B,MAAQ,2BAA2B,QAAU,6BAA6B,QAAU,+B,mBCA/QD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,OAAS,8BAA8B,MAAQ,6BAA6B,KAAO,8B,mBCA1JD,EAAOC,QAAU,CAAC,MAAQ,iDAAiD,MAAQ,iDAAiD,QAAU,uD,mBCA9ID,EAAOC,QAAU,CAAC,oBAAsB,iDAAiD,MAAQ,mCAAmC,KAAO,oC,mBCA3ID,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,SAAW,wB,mBCA7ED,EAAOC,QAAU,CAAC,SAAW,mCAAmC,QAAU,oC,mBCA1ED,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,2BAA2B,kD","file":"static/js/main.2554c0cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.54299101.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"SentMessagesItem_data__3Y-6B\",\"success\":\"SentMessagesItem_success__3Jr56\",\"waiting\":\"SentMessagesItem_waiting__27Blw\",\"warning\":\"SentMessagesItem_warning__2-kO6\"};","import {\r\n  SEND_MESSAGE,\r\n  UPDATE_MESSAGE_STATUS,\r\n  ADD_ATTACHED_FILE,\r\n  CLEAN_ATTACHED_FILES,\r\n  REMOVE_ATTACHED_FILE,\r\n  SET_FILES_ERROR\r\n} from '../constants/form'\r\n\r\nconst initialState = {\r\n  sentMessages: [],\r\n  attachedFiles: [],\r\n  filesError: null\r\n}\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        sentMessages: [\r\n          ...state.sentMessages,\r\n          {\r\n            values: {\r\n              ...action.data\r\n            },\r\n            id: action.res['track.id']\r\n          }\r\n        ]\r\n      }\r\n    case UPDATE_MESSAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        sentMessages: state.sentMessages.map(msg => {\r\n          if (msg.id === action.id) {\r\n            return {\r\n              ...msg,\r\n              result: {\r\n                date: action.date,\r\n                status: parseFloat(action.status)\r\n              }\r\n            }\r\n          }\r\n          return msg\r\n        })\r\n      }\r\n    case ADD_ATTACHED_FILE:\r\n      return {\r\n        ...state,\r\n        filesError: null,\r\n        attachedFiles: [\r\n          ...state.attachedFiles,\r\n          {\r\n            name: action.payload.name,\r\n            base64: action.payload.base64,\r\n            size: action.payload.size,\r\n            encoding: 'base64'\r\n          }\r\n        ]\r\n      }\r\n    case REMOVE_ATTACHED_FILE: {\r\n      return {\r\n        ...state,\r\n        filesError: null,\r\n        attachedFiles: state.attachedFiles.filter(\r\n          ({ name }) => name !== action.payload.name\r\n        )\r\n      }\r\n    }\r\n    case CLEAN_ATTACHED_FILES: {\r\n      return {\r\n        ...state,\r\n        attachedFiles: []\r\n      }\r\n    }\r\n    case SET_FILES_ERROR:\r\n      return {\r\n        ...state,\r\n        filesError: action.payload.msg\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default formReducer\r\n","export const SEND_MESSAGE = 'SEND_MESSAGE'\r\nexport const UPDATE_MESSAGE_STATUS = 'UPDATE_MESSAGE_STATUS'\r\nexport const ADD_ATTACHED_FILE = 'ADD_ATTACHED_FILE'\r\nexport const REMOVE_ATTACHED_FILE = 'REMOVE_ATTACHED_FILE'\r\nexport const CLEAN_ATTACHED_FILES = 'CLEAN_ATTACHED_FILES'\r\nexport const SET_FILES_ERROR = 'SET_FILES_ERROR'\r\n","import {\r\n  SHOW_THANKSGIVING_MESSAGE,\r\n  HIDE_THANKSGIVING_MESSAGE\r\n} from '../constants/thanksgivingMessage'\r\n\r\nconst initialState = {\r\n  isShow: false,\r\n  email: null\r\n}\r\n\r\nconst thanksgivingMessageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_THANKSGIVING_MESSAGE:\r\n      return {\r\n        ...state,\r\n        isShow: true,\r\n        email: action.email\r\n      }\r\n    case HIDE_THANKSGIVING_MESSAGE:\r\n      return {\r\n        ...state,\r\n        isShow: false,\r\n        email: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default thanksgivingMessageReducer\r\n","export const SHOW_THANKSGIVING_MESSAGE = 'SHOW_THANKSGIVING_MESSAGE'\r\nexport const HIDE_THANKSGIVING_MESSAGE = 'HIDE_THANKSGIVING_MESSAGE'\r\n","import { combineReducers } from 'redux'\r\nimport formReducer from './formReducer'\r\nimport thanksgivingMessageReducer from './thanksgivingMessageReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer,\r\n  thanksgivingMessage: thanksgivingMessageReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/rootReducer'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n\r\nexport default store\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import images */\r\nimport logo from './logo.svg'\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div>\r\n      <img src={logo} alt=\"Logo\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import Sendsay from 'sendsay-api'\r\n\r\nconst apiKey =\r\n  '192D7YRfBa7DSUVVQIJ1m-KsCxOsTp0qum0tKw3SlO8XShNe2xLDWtd2LA6GVxJiQmR07ouhOtA'\r\nconst sendsay = new Sendsay({ apiKey })\r\n\r\nconst transformData = ({\r\n  subject,\r\n  fromName,\r\n  fromEmail,\r\n  toName,\r\n  toEmail,\r\n  message,\r\n  attaches\r\n}) => {\r\n  return {\r\n    action: 'issue.send.test',\r\n    letter: {\r\n      subject,\r\n      'from.name': fromName,\r\n      'from.email': fromEmail,\r\n      'to.name': toName,\r\n      message: { text: message },\r\n      attaches: attaches.map(({ name, base64, encoding }) => ({\r\n        name,\r\n        base64,\r\n        encoding\r\n      }))\r\n    },\r\n    sendwhen: 'test',\r\n    mca: [toEmail]\r\n  }\r\n}\r\n\r\nexport const sendFormData = data => {\r\n  return sendsay\r\n    .request(transformData(data))\r\n    .then(res => res)\r\n    .catch(err => err)\r\n}\r\n\r\nexport const getMessageInfo = id => {\r\n  return sendsay\r\n    .request({ action: 'track.get', id })\r\n    .then(res => res)\r\n    .catch(err => err)\r\n}\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport { useField } from 'formik'\r\n\r\n/* Import styles */\r\nimport styles from './TextArea.module.css'\r\n\r\nconst TextArea = ({ label, component, isSubmitting, ...props }) => {\r\n  const { id, name } = props\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id || name} className={styles.label}>\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className={styles.field}\r\n        disabled={isSubmitting}\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div className={styles.warning}>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport { useField } from 'formik'\r\n\r\n/* Import styles */\r\nimport styles from './TextInput.module.css'\r\n\r\nconst TextInput = ({ label, position, isSubmitting, ...props }) => {\r\n  const { id, name } = props\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id || name} className={styles.label}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        className={`${styles.field} ${position ? styles[position] : ''}`}\r\n        disabled={isSubmitting}\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div className={styles.warning}>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import styles */\r\nimport styles from './ButtonUploadFile.module.css'\r\n\r\nexport const ButtonUploadFile = ({ getInputProps, isSubmitting }) => {\r\n  return (\r\n    <label htmlFor=\"btn-file\" className={styles.btnLabel}>\r\n      Прикрепить файл\r\n      <input\r\n        type=\"file\"\r\n        name=\"btn-file\"\r\n        id=\"btn-file\"\r\n        className={styles.btnFile}\r\n        disabled={isSubmitting}\r\n        {...getInputProps()}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ButtonUploadFile\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import styles */\r\nimport styles from './AttachedFiles.module.css'\r\n\r\nconst AttachedFiles = ({ attachedFiles, removeAttachedFile, isSubmitting }) => {\r\n  return (\r\n    <div className={styles.attachedFiles}>\r\n      {attachedFiles.map(({ name }) => {\r\n        return (\r\n          <div className={styles.file} key={name}>\r\n            <div className={styles.fileName}>{name}</div>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.btnDelete}\r\n              disabled={isSubmitting}\r\n              onClick={() => removeAttachedFile(name)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachedFiles\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import styles */\r\nimport styles from './DragndropZone.module.css'\r\n\r\nconst DragndropZone = ({ isDragActive }) => {\r\n  return (\r\n    <div\r\n      className={`${styles.dragndropZone} ${isDragActive ? styles.active : ''}`}\r\n    >\r\n      <div className={styles.title}>Бросайте файлы сюда, я ловлю</div>\r\n      <div className={styles.text}>\r\n        Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls, pdf) и\r\n        zip-архивы. Размеры файла до 5 МБ\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragndropZone\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import components */\r\nimport TextArea from './TextArea/TextArea'\r\nimport TextInput from './TextInput/TextInput'\r\nimport ButtonUploadFile from './ButtonUploadFile/ButtonUploadFile'\r\nimport AttachedFiles from './AttachedFiles/AttachedFiles'\r\nimport DragndropZone from './DragndropZone/DragndropZone'\r\n\r\n/* Import styles */\r\nimport styles from './MessageForm.module.css'\r\n\r\nconst MessageFormView = ({\r\n  isSubmitting,\r\n  handleSubmit,\r\n  attachedFiles,\r\n  getRootProps,\r\n  getInputProps,\r\n  isDragActive,\r\n  removeAttachedFile,\r\n  filesError\r\n}) => {\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit} {...getRootProps()}>\r\n      <div className={styles.title}>Отправлялка сообщений</div>\r\n      <div className={styles.row}>\r\n        <div className={styles.group}>\r\n          <TextInput\r\n            label=\"От кого\"\r\n            name=\"fromName\"\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            position=\"left\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n        </div>\r\n        <div className={styles.group}>\r\n          <TextInput\r\n            name=\"fromEmail\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            position=\"right\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <div className={styles.group}>\r\n          <TextInput\r\n            label=\"Кому\"\r\n            name=\"toName\"\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            position=\"left\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n        </div>\r\n        <div className={styles.group}>\r\n          <TextInput\r\n            name=\"toEmail\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            position=\"right\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <div className={styles.group}>\r\n          <TextInput\r\n            label=\"Тема письма\"\r\n            name=\"subject\"\r\n            type=\"text\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <div className={styles.group}>\r\n          <TextArea\r\n            label=\"Сообщение\"\r\n            name=\"message\"\r\n            type=\"text\"\r\n            isSubmitting={isSubmitting}\r\n          />\r\n          {!!attachedFiles.length && (\r\n            <AttachedFiles\r\n              attachedFiles={attachedFiles}\r\n              removeAttachedFile={removeAttachedFile}\r\n              isSubmitting={isSubmitting}\r\n            />\r\n          )}\r\n          <ButtonUploadFile\r\n            getInputProps={getInputProps}\r\n            isSubmitting={isSubmitting}\r\n          />\r\n          {filesError && <span className={styles.warning}>{filesError}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className={styles.btnSend} disabled={isSubmitting}>\r\n        Отправить\r\n      </button>\r\n\r\n      <DragndropZone isDragActive={isDragActive} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MessageFormView\r\n","/* Import libraries */\r\nimport React, { useCallback } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\n/* Import action creators */\r\nimport {\r\n  sendMessage,\r\n  addAttachedFile,\r\n  cleanAttachedFiles,\r\n  removeAttachedFile,\r\n  setFilesError\r\n} from '../../actionCreators/form'\r\nimport { showThanksgivingMessage } from '../../actionCreators/thanksgivingMessage'\r\n\r\n/* Import components */\r\nimport MessageFormView from './MessageFormView'\r\nimport { Formik } from 'formik'\r\n\r\nconst validationSchema = Yup.object({\r\n  fromName: Yup.string().required('Имя не может быть пустым'),\r\n  fromEmail: Yup.string()\r\n    .email('Введите корректный Email')\r\n    .required('Email не может быть пустым'),\r\n  toName: Yup.string().required('Имя не может быть пустым'),\r\n  toEmail: Yup.string()\r\n    .email('Введите корректный Email')\r\n    .required('Email не может быть пустым'),\r\n  subject: Yup.string()\r\n    .max(30, 'Максимальная длина не должна превышать 30 символов')\r\n    .min(10, 'Минимальная длина темы не может быть менее 10 символов')\r\n    .required('Название темы не может быть пустой'),\r\n  message: Yup.string()\r\n    .max(500, 'Максимальная длина сообщения не должна превышать 500 символов')\r\n    .min(30, 'Минимальная длина сообщения не может быть менее 30 символов')\r\n    .required('Сообщение не может быть пустым')\r\n})\r\n\r\nconst initialValues = {\r\n  fromName: '',\r\n  fromEmail: '',\r\n  toName: '',\r\n  toEmail: '',\r\n  subject: '',\r\n  message: ''\r\n}\r\n\r\nconst MessageForm = ({\r\n  sendMessage,\r\n  showThanksgivingMessage,\r\n  attachedFiles,\r\n  addAttachedFile,\r\n  cleanAttachedFiles,\r\n  removeAttachedFile,\r\n  setFilesError,\r\n  filesError\r\n}) => {\r\n  const _maxSize = 5000000\r\n  const _maxTotalSize = 20000000\r\n\r\n  const onDrop = useCallback(\r\n    acceptedFiles => {\r\n      if (\r\n        acceptedFiles.reduce((sum, { size }) => size + sum, 0) +\r\n          attachedFiles.reduce((sum, { size }) => size + sum, 0) >\r\n        _maxTotalSize\r\n      ) {\r\n        setFilesError(\r\n          `Общий размер файлов не должен превышать ${_maxTotalSize /\r\n            1000000} МБ`\r\n        )\r\n        return\r\n      }\r\n\r\n      acceptedFiles.forEach(file => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onabort = () => console.log('file reading was aborted')\r\n        reader.onerror = () => setFilesError('Произошла ошибка чтения файла')\r\n        reader.onload = () => {\r\n          const { name: currentName, size: currentSize } = file\r\n          const totalSize = attachedFiles.reduce(\r\n            (sum, { size }) => sum + size,\r\n            currentSize\r\n          )\r\n\r\n          if (\r\n            !attachedFiles.some(({ name }) => name === currentName) &&\r\n            totalSize < _maxTotalSize\r\n          ) {\r\n            addAttachedFile(currentName, reader.result, currentSize)\r\n          }\r\n          if (totalSize > _maxTotalSize) {\r\n            setFilesError(\r\n              `Общий размер файлов не должен превышать ${_maxTotalSize /\r\n                1000000} МБ`\r\n            )\r\n          }\r\n        }\r\n        reader.readAsDataURL(file)\r\n      })\r\n    },\r\n    [attachedFiles, setFilesError, addAttachedFile]\r\n  )\r\n\r\n  const onDropRejected = useCallback(\r\n    rejectedFiles => {\r\n      rejectedFiles.forEach(({ size }) => {\r\n        if (size > _maxSize) {\r\n          setFilesError(\r\n            `Максимальный размер одного файла не должен превышать ${_maxSize /\r\n              1000000} МБ`\r\n          )\r\n        } else {\r\n          setFilesError('Произошла ошибка загрузки файла')\r\n        }\r\n      })\r\n    },\r\n    [setFilesError]\r\n  )\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    onDropRejected,\r\n    noClick: true,\r\n    maxSize: _maxSize\r\n  })\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        sendMessage({ ...values, attaches: attachedFiles }).then(() => {\r\n          setSubmitting(false)\r\n          resetForm()\r\n          cleanAttachedFiles()\r\n          setFilesError(null)\r\n          showThanksgivingMessage(values.toEmail)\r\n        })\r\n      }}\r\n    >\r\n      {({ isSubmitting, handleSubmit }) => (\r\n        <MessageFormView\r\n          isSubmitting={isSubmitting}\r\n          handleSubmit={handleSubmit}\r\n          attachedFiles={attachedFiles}\r\n          getRootProps={getRootProps}\r\n          getInputProps={getInputProps}\r\n          isDragActive={isDragActive}\r\n          removeAttachedFile={removeAttachedFile}\r\n          filesError={filesError}\r\n        />\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ form: { attachedFiles, filesError } }) => ({\r\n  attachedFiles,\r\n  filesError\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  sendMessage,\r\n  showThanksgivingMessage,\r\n  addAttachedFile,\r\n  removeAttachedFile,\r\n  cleanAttachedFiles,\r\n  setFilesError\r\n})(MessageForm)\r\n","import { getMessageInfo, sendFormData } from '../services/api'\r\nimport {\r\n  SEND_MESSAGE,\r\n  UPDATE_MESSAGE_STATUS,\r\n  ADD_ATTACHED_FILE,\r\n  CLEAN_ATTACHED_FILES,\r\n  REMOVE_ATTACHED_FILE,\r\n  SET_FILES_ERROR\r\n} from '../constants/form'\r\n\r\nexport const sendMessageAC = (res, data) => ({ type: SEND_MESSAGE, res, data })\r\n\r\nexport const sendMessage = data => dispatch => {\r\n  return sendFormData(data).then(res => {\r\n    dispatch(sendMessageAC(res, data))\r\n  })\r\n}\r\n\r\nexport const updateMessageStatusAC = (id, date, status) => ({\r\n  type: UPDATE_MESSAGE_STATUS,\r\n  id,\r\n  status,\r\n  date\r\n})\r\n\r\nexport const updateMessageStatus = id => dispatch => {\r\n  getMessageInfo(id).then(({ obj: { dt, status } }) => {\r\n    dispatch(updateMessageStatusAC(id, dt, status))\r\n  })\r\n}\r\n\r\nexport const addAttachedFile = (name, base64, size) => ({\r\n  type: ADD_ATTACHED_FILE,\r\n  payload: { name, base64, size }\r\n})\r\n\r\nexport const cleanAttachedFiles = () => ({ type: CLEAN_ATTACHED_FILES })\r\n\r\nexport const removeAttachedFile = name => ({\r\n  type: REMOVE_ATTACHED_FILE,\r\n  payload: { name }\r\n})\r\n\r\nexport const setFilesError = msg => ({\r\n  type: SET_FILES_ERROR,\r\n  payload: { msg }\r\n})\r\n","import {\r\n  SHOW_THANKSGIVING_MESSAGE,\r\n  HIDE_THANKSGIVING_MESSAGE\r\n} from '../constants/thanksgivingMessage'\r\n\r\nexport const showThanksgivingMessage = email => ({\r\n  type: SHOW_THANKSGIVING_MESSAGE,\r\n  email\r\n})\r\n\r\nexport const hideThanksgivingMessage = () => ({\r\n  type: HIDE_THANKSGIVING_MESSAGE\r\n})\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport ru from 'moment/locale/ru'\r\n\r\n/* Import styles */\r\nimport styles from './SentMessagesItem.module.css'\r\n\r\nconst SentMessagesItemView = ({ message, date, status }) => {\r\n  return (\r\n    <tr>\r\n      <td className={styles.data}>\r\n        {date &&\r\n          moment(date)\r\n            .locale('ru')\r\n            .format('DD MMMM')}\r\n      </td>\r\n      <td className={styles.data} title={message}>\r\n        {message}\r\n      </td>\r\n      <td className={styles.data}>\r\n        {status === -1 && <span className={styles.success}>Отправлено</span>}\r\n        {status < -1 && <span className={styles.warning}>Ошибка</span>}\r\n        {status > -1 && <span className={styles.waiting}>В процессе</span>}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default SentMessagesItemView\r\n","/* Import libraries */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n/* Import reducers */\r\nimport { updateMessageStatus } from '../../../../actionCreators/form'\r\n\r\n/* Import components */\r\nimport SentMessagesItemView from './SentMessagesItemView'\r\n\r\nclass SentMessagesItem extends Component {\r\n  componentDidMount() {\r\n    const { updateMessageStatus, id } = this.props\r\n\r\n    updateMessageStatus(id)\r\n\r\n    this.timer = setInterval(() => {\r\n      updateMessageStatus(id)\r\n    }, 3000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.status !== this.props.status) {\r\n      clearInterval(this.timer)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  render() {\r\n    return <SentMessagesItemView {...this.props} />\r\n  }\r\n}\r\n\r\nexport default connect(() => ({}), { updateMessageStatus })(SentMessagesItem)\r\n","/* Import libraries */\r\nimport React from 'react'\r\n\r\n/* Import components */\r\nimport SentMessagesItem from './SentMessagesItem/SentMessagesItem'\r\n\r\n/* Import styles */\r\nimport styles from './TableSentMessages.module.css'\r\n\r\nconst TableSentMessages = ({ sentMessages }) => {\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        <tr className={styles.header}>\r\n          <th className={styles.heading}>Дата</th>\r\n          <th className={styles.heading}>Тема</th>\r\n          <th className={styles.heading}>Статус</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {sentMessages.map(\r\n          ({\r\n            id,\r\n            values: { message },\r\n            result: { status = 0, date = null } = {}\r\n          }) => {\r\n            return (\r\n              <SentMessagesItem\r\n                key={id}\r\n                message={message}\r\n                id={id}\r\n                status={status}\r\n                date={date}\r\n              />\r\n            )\r\n          }\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default TableSentMessages\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n/* Import components */\r\nimport TableSentMessages from './TableSentMessages/TableSentMessages'\r\n\r\n/* Import styles */\r\nimport styles from './SentMessages.module.css'\r\n\r\nconst SentMessages = ({ sentMessages }) => {\r\n  return (\r\n    <div className={styles.sentMessages}>\r\n      <div className={styles.title}>Отправленные сообщения</div>\r\n      {!!sentMessages.length && (\r\n        <TableSentMessages sentMessages={sentMessages} />\r\n      )}\r\n      {!sentMessages.length && <div>Сообщения ещё не отправлялись</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ form: { sentMessages } }) => ({\r\n  sentMessages\r\n})\r\n\r\nexport default connect(mapStateToProps)(SentMessages)\r\n","/* Import libraries */\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n/* Import action creators */\r\nimport { hideThanksgivingMessage } from '../../actionCreators/thanksgivingMessage'\r\n\r\n/* Import styles */\r\nimport styles from './ThanksgivingMessage.module.css'\r\n\r\nconst ThanksgivingMessage = ({ email, hideThanksgivingMessage }) => {\r\n  useEffect(() => {\r\n    const timer = setTimeout(hideThanksgivingMessage, 7000)\r\n    return () => clearTimeout(timer)\r\n  })\r\n\r\n  return (\r\n    <div className={styles.thanksgivingMessage}>\r\n      <div className={styles.title}>\r\n        Сообщение поставлено в очередь на отправку\r\n      </div>\r\n      <div className={styles.text}>\r\n        Совсем скоро сообщение вылетит из сервера, и будет двигаться в сторону\r\n        почты получателя «{email}» со скоростью электронов.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ thanksgivingMessage: { email } }) => ({\r\n  email\r\n})\r\n\r\nexport default connect(mapStateToProps, { hideThanksgivingMessage })(\r\n  ThanksgivingMessage\r\n)\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\n/* Import components */\r\nimport Logo from '../Logo/Logo'\r\nimport MessageForm from '../MessageForm/MessageForm'\r\nimport SentMessages from '../SentMessages/SentMessages'\r\nimport ThanksgivingMessage from '../ThanksgivingMessage/ThanksgivingMessage'\r\n\r\n/* Import styles */\r\nimport styles from './App.module.css'\r\n\r\nconst App = ({ isShowThanksgivingMessage }) => {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Logo />\r\n      <div className={styles.form}>\r\n        <TransitionGroup>\r\n          {!isShowThanksgivingMessage && (\r\n            <CSSTransition classNames=\"fade\" timeout={0}>\r\n              <MessageForm />\r\n            </CSSTransition>\r\n          )}\r\n          {isShowThanksgivingMessage && (\r\n            <CSSTransition classNames=\"fade\" timeout={0}>\r\n              <ThanksgivingMessage />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </div>\r\n      <div className={styles.messages}>\r\n        <SentMessages />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  thanksgivingMessage: { isShow: isShowThanksgivingMessage }\r\n}) => ({\r\n  isShowThanksgivingMessage\r\n})\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\nimport './index.css'\r\n\r\nimport App from './components/App/App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableSentMessages_table__Iy7kP\",\"header\":\"TableSentMessages_header__38QlS\",\"heading\":\"TableSentMessages_heading__2JFil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"TextInput_field__3tu5z MessageForm_field__3CRJl\",\"left\":\"TextInput_left__2driE\",\"right\":\"TextInput_right__2-lAJ\",\"label\":\"TextInput_label__3_dx7 MessageForm_label__2Iw6N\",\"warning\":\"TextInput_warning__3RZ41 MessageForm_warning__3f_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachedFiles\":\"AttachedFiles_attachedFiles__1pfYt\",\"file\":\"AttachedFiles_file__IqU0m\",\"fileName\":\"AttachedFiles_fileName__18gE2\",\"btnDelete\":\"AttachedFiles_btnDelete__88Dk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MessageForm_form__274-I\",\"title\":\"MessageForm_title__3KAGi\",\"row\":\"MessageForm_row__2DktO\",\"group\":\"MessageForm_group__1Zk9u\",\"field\":\"MessageForm_field__3CRJl\",\"label\":\"MessageForm_label__2Iw6N\",\"btnSend\":\"MessageForm_btnSend__2Mq0l\",\"warning\":\"MessageForm_warning__3f_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragndropZone\":\"DragndropZone_dragndropZone__12E3q\",\"active\":\"DragndropZone_active__3Yxz6\",\"title\":\"DragndropZone_title__eu3Ey\",\"text\":\"DragndropZone_text__1G6N7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"TextArea_field__GZum7 MessageForm_field__3CRJl\",\"label\":\"TextArea_label__qj94L MessageForm_label__2Iw6N\",\"warning\":\"TextArea_warning__3eSOh MessageForm_warning__3f_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thanksgivingMessage\":\"ThanksgivingMessage_thanksgivingMessage__2Is2e\",\"title\":\"ThanksgivingMessage_title__16yAx\",\"text\":\"ThanksgivingMessage_text__21gqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3j3NM\",\"form\":\"App_form__2qEx6\",\"messages\":\"App_messages__2SkfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLabel\":\"ButtonUploadFile_btnLabel__2VXAg\",\"btnFile\":\"ButtonUploadFile_btnFile__3ArXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentMessages\":\"SentMessages_sentMessages__2wsid\",\"title\":\"SentMessages_title__3J_8T\",\"sent-messages-text-empty\":\"SentMessages_sent-messages-text-empty__35MoR\"};"],"sourceRoot":""}